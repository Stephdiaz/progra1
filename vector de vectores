# progra1
//vector de vecotres

#include "stdafx.h"
#include <iostream>
#include "conio.h"
#define max 30
struct datos{
	int a[max];
};
void cargar(datos A[max],int tam);
void mostrar(datos A[max],int tam);
bool verificarprimo (int n);
void sumadeprimos(datos A[max],int tam);
void invertirsubvector(int a[max],int tam);
void invertirgrande(datos A[max],int tam);
void cargararo (datos A[max],int tam);
void burbuja (int a[], int tam);
void acomodar (datos A[max],int tam);
using namespace std;

void main() {
int tam;
datos A[max];
cout<<"Introducir tamaÃ±o del vector"<<endl;
cin>>tam;
cargar(A,tam);
mostrar (A,tam);

acomodar(A,tam);
mostrar (A,tam);

getch();
}
void cargar(datos A[max],int tam){
int i,j;
for (i=0;i<tam;i++){
	cout<<"Cargar el subvector del espacio "<<i+1<<endl;
	for (j=0;j<tam;j++){
		cin>>A[i].a[j];
	}
}
}
void mostrar(datos A[max],int tam){
int i,j;
for (i=0;i<tam;i++){
	for (j=0;j<tam;j++){
		cout<<A[i].a[j]<<" ";
	}cout<<"     ";
}
}
bool verificarprimo (int n){
	if ((n==0)||(n==1)){return false;}

	for (int i=2;i<n;i++){
	if(n%i==0)
	{
		return false;
	} 
	}
	return true;
}
	 
void sumadeprimos(datos A[max],int tam){
	int i,j,r=0;
for (i=0;i<tam;i++){
	for (j=0;j<tam;j++){
		if(verificarprimo (A[i].a[j])==true){
			r=r+A[i].a[j];
		}
	}
}
cout<<"La respuesta es "<<r;
}
void invertirsubvector(int a[max],int tam){
	int aux=0;
	for (int i=0;i<tam/2;i++){
		aux=a[i];
		a[i]=a[tam-i-1];
		a[tam-i-1]=aux;
	}
}
void invertirgrande(datos A[max],int tam){
	for (int i=0;i<tam;i++){
		invertirsubvector (A[i].a,tam);
	}
}

void cargararo (datos A[max],int tam)
{
	int i,aux=1,j,auxn=1,auxm=1;
	for(i=0;i<tam;i++)
	{
		A[i].a[i]=aux;
		aux++;
	}
	for(i=0;i<tam;i++)
	{
		for(j=0;j<tam;j++)
	{
		if(i>j){
		A[i].a[j]=auxn;
		auxn=auxn+2;
	}
		else if(i<j){
		A[i].a[j]=auxm;
		auxm=auxm+2;
	}
		}
	}
}
void burbuja (int a[], int tam)
{
for (int i=0;i<tam;i++)
for (int j=i+1;j<tam;j++)
if (a[i]>a[j])
{ int temp=a[i];
a[i]=a[j];
a[j]=temp;
}
}
void acomodar (datos A[max],int tam)
{ int i,j,b[max],acum=0,h=0;
for(i=0;i<tam;i++)
	{
		for(j=0;j<tam;j++)
	{
		if(verificarprimo(A[i].a[j])==true)
		{
			b[acum]=A[i].a[j];
		acum++;
		}
		}
		}burbuja(b,acum);
		for(i=0;i<tam;i++)
	{
		for(j=0;j<tam;j++)
	{
		if(verificarprimo(A[i].a[j])==true)
		{
			A[i].a[j]=b[h];
			h++;
		}
		}
		}
}
